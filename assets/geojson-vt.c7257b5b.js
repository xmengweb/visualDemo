function J(n,r,t,i){for(var l=i,f=t-r>>1,s=t-r,e,a=n[r],o=n[r+1],u=n[t],v=n[t+1],h=r+3;h<t;h+=3){var c=W(n[h],n[h+1],a,o,u,v);if(c>l)e=h,l=c;else if(c===l){var m=Math.abs(h-f);m<s&&(e=h,s=m)}}l>i&&(e-r>3&&J(n,r,e,i),n[e+2]=l,t-e>3&&J(n,e,t,i))}function W(n,r,t,i,l,f){var s=l-t,e=f-i;if(s!==0||e!==0){var a=((n-t)*s+(r-i)*e)/(s*s+e*e);a>1?(t=l,i=f):a>0&&(t+=s*a,i+=e*a)}return s=n-t,e=r-i,s*s+e*e}function Z(n,r,t,i){var l={id:typeof n>"u"?null:n,type:r,geometry:t,tags:i,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0};return $(l),l}function $(n){var r=n.geometry,t=n.type;if(t==="Point"||t==="MultiPoint"||t==="LineString")C(n,r);else if(t==="Polygon"||t==="MultiLineString")for(var i=0;i<r.length;i++)C(n,r[i]);else if(t==="MultiPolygon")for(i=0;i<r.length;i++)for(var l=0;l<r[i].length;l++)C(n,r[i][l])}function C(n,r){for(var t=0;t<r.length;t+=3)n.minX=Math.min(n.minX,r[t]),n.minY=Math.min(n.minY,r[t+1]),n.maxX=Math.max(n.maxX,r[t]),n.maxY=Math.max(n.maxY,r[t+1])}function A(n,r){var t=[];if(n.type==="FeatureCollection")for(var i=0;i<n.features.length;i++)F(t,n.features[i],r,i);else n.type==="Feature"?F(t,n,r):F(t,{geometry:n},r);return t}function F(n,r,t,i){if(!!r.geometry){var l=r.geometry.coordinates,f=r.geometry.type,s=Math.pow(t.tolerance/((1<<t.maxZoom)*t.extent),2),e=[],a=r.id;if(t.promoteId?a=r.properties[t.promoteId]:t.generateId&&(a=i||0),f==="Point")q(l,e);else if(f==="MultiPoint")for(var o=0;o<l.length;o++)q(l[o],e);else if(f==="LineString")N(l,e,s,!1);else if(f==="MultiLineString")if(t.lineMetrics){for(o=0;o<l.length;o++)e=[],N(l[o],e,s,!1),n.push(Z(a,"LineString",e,r.properties));return}else T(l,e,s,!1);else if(f==="Polygon")T(l,e,s,!0);else if(f==="MultiPolygon")for(o=0;o<l.length;o++){var u=[];T(l[o],u,s,!0),e.push(u)}else if(f==="GeometryCollection"){for(o=0;o<r.geometry.geometries.length;o++)F(n,{id:a,geometry:r.geometry.geometries[o],properties:r.properties},t,i);return}else throw new Error("Input data is not a valid GeoJSON object.");n.push(Z(a,f,e,r.properties))}}function q(n,r){r.push(Q(n[0])),r.push(R(n[1])),r.push(0)}function N(n,r,t,i){for(var l,f,s=0,e=0;e<n.length;e++){var a=Q(n[e][0]),o=R(n[e][1]);r.push(a),r.push(o),r.push(0),e>0&&(i?s+=(l*o-a*f)/2:s+=Math.sqrt(Math.pow(a-l,2)+Math.pow(o-f,2))),l=a,f=o}var u=r.length-3;r[2]=1,J(r,0,u,t),r[u+2]=1,r.size=Math.abs(s),r.start=0,r.end=r.size}function T(n,r,t,i){for(var l=0;l<n.length;l++){var f=[];N(n[l],f,t,i),r.push(f)}}function Q(n){return n/360+.5}function R(n){var r=Math.sin(n*Math.PI/180),t=.5-.25*Math.log((1+r)/(1-r))/Math.PI;return t<0?0:t>1?1:t}function S(n,r,t,i,l,f,s,e){if(t/=r,i/=r,f>=t&&s<i)return n;if(s<t||f>=i)return null;for(var a=[],o=0;o<n.length;o++){var u=n[o],v=u.geometry,h=u.type,c=l===0?u.minX:u.minY,m=l===0?u.maxX:u.maxY;if(c>=t&&m<i){a.push(u);continue}else if(m<t||c>=i)continue;var d=[];if(h==="Point"||h==="MultiPoint")z(v,d,t,i,l);else if(h==="LineString")U(v,d,t,i,l,!1,e.lineMetrics);else if(h==="MultiLineString")B(v,d,t,i,l,!1);else if(h==="Polygon")B(v,d,t,i,l,!0);else if(h==="MultiPolygon")for(var p=0;p<v.length;p++){var g=[];B(v[p],g,t,i,l,!0),g.length&&d.push(g)}if(d.length){if(e.lineMetrics&&h==="LineString"){for(p=0;p<d.length;p++)a.push(Z(u.id,h,d[p],u.tags));continue}(h==="LineString"||h==="MultiLineString")&&(d.length===1?(h="LineString",d=d[0]):h="MultiLineString"),(h==="Point"||h==="MultiPoint")&&(h=d.length===3?"Point":"MultiPoint"),a.push(Z(u.id,h,d,u.tags))}}return a.length?a:null}function z(n,r,t,i,l){for(var f=0;f<n.length;f+=3){var s=n[f+l];s>=t&&s<=i&&(r.push(n[f]),r.push(n[f+1]),r.push(n[f+2]))}}function U(n,r,t,i,l,f,s){for(var e=w(n),a=l===0?G:j,o=n.start,u,v,h=0;h<n.length-3;h+=3){var c=n[h],m=n[h+1],d=n[h+2],p=n[h+3],g=n[h+4],M=l===0?c:m,L=l===0?p:g,Y=!1;s&&(u=Math.sqrt(Math.pow(c-p,2)+Math.pow(m-g,2))),M<t?L>t&&(v=a(e,c,m,p,g,t),s&&(e.start=o+u*v)):M>i?L<i&&(v=a(e,c,m,p,g,i),s&&(e.start=o+u*v)):O(e,c,m,d),L<t&&M>=t&&(v=a(e,c,m,p,g,t),Y=!0),L>i&&M<=i&&(v=a(e,c,m,p,g,i),Y=!0),!f&&Y&&(s&&(e.end=o+u*v),r.push(e),e=w(n)),s&&(o+=u)}var P=n.length-3;c=n[P],m=n[P+1],d=n[P+2],M=l===0?c:m,M>=t&&M<=i&&O(e,c,m,d),P=e.length-3,f&&P>=3&&(e[P]!==e[0]||e[P+1]!==e[1])&&O(e,e[0],e[1],e[2]),e.length&&r.push(e)}function w(n){var r=[];return r.size=n.size,r.start=n.start,r.end=n.end,r}function B(n,r,t,i,l,f){for(var s=0;s<n.length;s++)U(n[s],r,t,i,l,f,!1)}function O(n,r,t,i){n.push(r),n.push(t),n.push(i)}function G(n,r,t,i,l,f){var s=(f-r)/(i-r);return n.push(f),n.push(t+(l-t)*s),n.push(1),s}function j(n,r,t,i,l,f){var s=(f-t)/(l-t);return n.push(r+(i-r)*s),n.push(f),n.push(1),s}function y(n,r){var t=r.buffer/r.extent,i=n,l=S(n,1,-1-t,t,0,-1,2,r),f=S(n,1,1-t,2+t,0,-1,2,r);return(l||f)&&(i=S(n,1,-t,1+t,0,-1,2,r)||[],l&&(i=V(l,1).concat(i)),f&&(i=i.concat(V(f,-1)))),i}function V(n,r){for(var t=[],i=0;i<n.length;i++){var l=n[i],f=l.type,s;if(f==="Point"||f==="MultiPoint"||f==="LineString")s=_(l.geometry,r);else if(f==="MultiLineString"||f==="Polygon"){s=[];for(var e=0;e<l.geometry.length;e++)s.push(_(l.geometry[e],r))}else if(f==="MultiPolygon")for(s=[],e=0;e<l.geometry.length;e++){for(var a=[],o=0;o<l.geometry[e].length;o++)a.push(_(l.geometry[e][o],r));s.push(a)}t.push(Z(l.id,f,s,l.tags))}return t}function _(n,r){var t=[];t.size=n.size,n.start!==void 0&&(t.start=n.start,t.end=n.end);for(var i=0;i<n.length;i+=3)t.push(n[i]+r,n[i+1],n[i+2]);return t}function H(n,r){if(n.transformed)return n;var t=1<<n.z,i=n.x,l=n.y,f,s,e;for(f=0;f<n.features.length;f++){var a=n.features[f],o=a.geometry,u=a.type;if(a.geometry=[],u===1)for(s=0;s<o.length;s+=2)a.geometry.push(K(o[s],o[s+1],r,t,i,l));else for(s=0;s<o.length;s++){var v=[];for(e=0;e<o[s].length;e+=2)v.push(K(o[s][e],o[s][e+1],r,t,i,l));a.geometry.push(v)}}return n.transformed=!0,n}function K(n,r,t,i,l,f){return[Math.round(t*(n*i-l)),Math.round(t*(r*i-f))]}function k(n,r,t,i,l){for(var f=r===l.maxZoom?0:l.tolerance/((1<<r)*l.extent),s={features:[],numPoints:0,numSimplified:0,numFeatures:0,source:null,x:t,y:i,z:r,transformed:!1,minX:2,minY:1,maxX:-1,maxY:0},e=0;e<n.length;e++){s.numFeatures++,nn(s,n[e],f,l);var a=n[e].minX,o=n[e].minY,u=n[e].maxX,v=n[e].maxY;a<s.minX&&(s.minX=a),o<s.minY&&(s.minY=o),u>s.maxX&&(s.maxX=u),v>s.maxY&&(s.maxY=v)}return s}function nn(n,r,t,i){var l=r.geometry,f=r.type,s=[];if(f==="Point"||f==="MultiPoint")for(var e=0;e<l.length;e+=3)s.push(l[e]),s.push(l[e+1]),n.numPoints++,n.numSimplified++;else if(f==="LineString")D(s,l,n,t,!1,!1);else if(f==="MultiLineString"||f==="Polygon")for(e=0;e<l.length;e++)D(s,l[e],n,t,f==="Polygon",e===0);else if(f==="MultiPolygon")for(var a=0;a<l.length;a++){var o=l[a];for(e=0;e<o.length;e++)D(s,o[e],n,t,!0,e===0)}if(s.length){var u=r.tags||null;if(f==="LineString"&&i.lineMetrics){u={};for(var v in r.tags)u[v]=r.tags[v];u.mapbox_clip_start=l.start/l.size,u.mapbox_clip_end=l.end/l.size}var h={geometry:s,type:f==="Polygon"||f==="MultiPolygon"?3:f==="LineString"||f==="MultiLineString"?2:1,tags:u};r.id!==null&&(h.id=r.id),n.features.push(h)}}function D(n,r,t,i,l,f){var s=i*i;if(i>0&&r.size<(l?s:i)){t.numPoints+=r.length/3;return}for(var e=[],a=0;a<r.length;a+=3)(i===0||r[a+2]>s)&&(t.numSimplified++,e.push(r[a]),e.push(r[a+1])),t.numPoints++;l&&rn(e,f),n.push(e)}function rn(n,r){for(var t=0,i=0,l=n.length,f=l-2;i<l;f=i,i+=2)t+=(n[i]-n[f])*(n[i+1]+n[f+1]);if(t>0===r)for(i=0,l=n.length;i<l/2;i+=2){var s=n[i],e=n[i+1];n[i]=n[l-2-i],n[i+1]=n[l-1-i],n[l-2-i]=s,n[l-1-i]=e}}function en(n,r){return new E(n,r)}function E(n,r){r=this.options=tn(Object.create(this.options),r);var t=r.debug;if(t&&console.time("preprocess data"),r.maxZoom<0||r.maxZoom>24)throw new Error("maxZoom should be in the 0-24 range");if(r.promoteId&&r.generateId)throw new Error("promoteId and generateId cannot be used together.");var i=A(n,r);this.tiles={},this.tileCoords=[],t&&(console.timeEnd("preprocess data"),console.log("index: maxZoom: %d, maxPoints: %d",r.indexMaxZoom,r.indexMaxPoints),console.time("generate tiles"),this.stats={},this.total=0),i=y(i,r),i.length&&this.splitTile(i,0,0,0),t&&(i.length&&console.log("features: %d, points: %d",this.tiles[0].numFeatures,this.tiles[0].numPoints),console.timeEnd("generate tiles"),console.log("tiles generated:",this.total,JSON.stringify(this.stats)))}E.prototype.options={maxZoom:14,indexMaxZoom:5,indexMaxPoints:1e5,tolerance:3,extent:4096,buffer:64,lineMetrics:!1,promoteId:null,generateId:!1,debug:0};E.prototype.splitTile=function(n,r,t,i,l,f,s){for(var e=[n,r,t,i],a=this.options,o=a.debug;e.length;){i=e.pop(),t=e.pop(),r=e.pop(),n=e.pop();var u=1<<r,v=b(r,t,i),h=this.tiles[v];if(!h&&(o>1&&console.time("creation"),h=this.tiles[v]=k(n,r,t,i,a),this.tileCoords.push({z:r,x:t,y:i}),o)){o>1&&(console.log("tile z%d-%d-%d (features: %d, points: %d, simplified: %d)",r,t,i,h.numFeatures,h.numPoints,h.numSimplified),console.timeEnd("creation"));var c="z"+r;this.stats[c]=(this.stats[c]||0)+1,this.total++}if(h.source=n,l){if(r===a.maxZoom||r===l)continue;var m=1<<l-r;if(t!==Math.floor(f/m)||i!==Math.floor(s/m))continue}else if(r===a.indexMaxZoom||h.numPoints<=a.indexMaxPoints)continue;if(h.source=null,n.length!==0){o>1&&console.time("clipping");var d=.5*a.buffer/a.extent,p=.5-d,g=.5+d,M=1+d,L,Y,P,x,X,I;L=Y=P=x=null,X=S(n,u,t-d,t+g,0,h.minX,h.maxX,a),I=S(n,u,t+p,t+M,0,h.minX,h.maxX,a),n=null,X&&(L=S(X,u,i-d,i+g,1,h.minY,h.maxY,a),Y=S(X,u,i+p,i+M,1,h.minY,h.maxY,a),X=null),I&&(P=S(I,u,i-d,i+g,1,h.minY,h.maxY,a),x=S(I,u,i+p,i+M,1,h.minY,h.maxY,a),I=null),o>1&&console.timeEnd("clipping"),e.push(L||[],r+1,t*2,i*2),e.push(Y||[],r+1,t*2,i*2+1),e.push(P||[],r+1,t*2+1,i*2),e.push(x||[],r+1,t*2+1,i*2+1)}}};E.prototype.getTile=function(n,r,t){var i=this.options,l=i.extent,f=i.debug;if(n<0||n>24)return null;var s=1<<n;r=(r%s+s)%s;var e=b(n,r,t);if(this.tiles[e])return H(this.tiles[e],l);f>1&&console.log("drilling down to z%d-%d-%d",n,r,t);for(var a=n,o=r,u=t,v;!v&&a>0;)a--,o=Math.floor(o/2),u=Math.floor(u/2),v=this.tiles[b(a,o,u)];return!v||!v.source?null:(f>1&&console.log("found parent tile z%d-%d-%d",a,o,u),f>1&&console.time("drilling down"),this.splitTile(v.source,a,o,u,n,r,t),f>1&&console.timeEnd("drilling down"),this.tiles[e]?H(this.tiles[e],l):null)};function b(n,r,t){return((1<<n)*t+r)*32+n}function tn(n,r){for(var t in r)n[t]=r[t];return n}export{en as g};
